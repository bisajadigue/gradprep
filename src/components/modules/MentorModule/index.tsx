import { SearchInput, MentorCard } from "@/components/elements";
import { type IMentorNew } from "@/components/elements/Cards/MentorCard/interface";
import { api } from "@/utils/api";
import { UserRole, type User } from "@prisma/client";
import Lottie from "lottie-react";
import Head from "next/head";
import Help from "public/assets/lottie/help.json";
import { useState, useEffect } from "react";

export const dummy: IMentorNew = {
  education: [
    {
      id: "a",
      userId: "abcdefg",
      school: "University of Melbourne",
      degree: "Information Tech. Ph.D.",
      field: "Computer Science",
    },
    {
      id: "a",
      userId: "abcdefg",
      school: "University of Polytech France",
      degree: "Master of Information Tech.",
      field: "Computer Science",
    }
  ],
  mentor: {
    experiences: [{
      id: "ab",
      mentorId: "abcdefg",
      organization: "PT. Abda Jaya",
      title: "Direktur Utama Abda Jaya",
      startPeriod: "2022-01-30",
      endPeriod: "2023-01-30",
    }],
    expertise: "Computer Science Ph.d",
    calendlyUrl: "https://calendly.com/shawn-mny/30min?month=2023-07&date=2023-07-03"
  },
  id: "abcdefg",
  name: "Nia Suni A.",
  email: "b@mail.com",
  emailVerified: new Date(),
  image: "/assets/pictures/person-1.png",
  bio: "Saya seorang ahli teknis.",
  role: UserRole.MENTOR,
  isOnboarded: true,
  // expertise: "abc",
}

export default function MentorsHomePage() {
  const fetchMentors = api.mentor.getAllMentor.useQuery({});
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const [data, setData] = useState<any[] | undefined>();

  useEffect(() => {
    console.log(fetchMentors.data);
    void setData(fetchMentors.data?.mentors);
  }, [fetchMentors.data]);

  return (
    <>
      <Head>
        <title>Mentors</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Hero */}
      <main className="relative flex min-h-screen flex-col items-center justify-start">
        <div className="relative h-[60vh] w-full bg-primary text-white">
          <div className="absolute bottom-0 right-[5vw] w-[20vw]">
            <Lottie animationData={Help} loop={false} />
          </div>
          <div className="container mx-auto flex h-full w-full flex-col items-start justify-center gap-y-8 pt-36">
            <h3 className="text-3xl md:max-w-[85%]">
              Temukan mentor yang tepat untuk pendidikanmu!
            </h3>
            <SearchInput
              placeholder="Cari mentor berdasarkan kata kunci  ..."
              className="max-w-[60%]"
            />
          </div>
          <div className="container relative mx-auto grid min-h-[95vh] w-full grid-cols-2 gap-2 py-8 sm:grid-cols-3 lg:grid-cols-4">
            {data?.map((mentor, i) => <MentorCard key={i} data={mentor} />)}
            <MentorCard data={dummy} />
            <MentorCard data={dummy} />
            <MentorCard data={dummy} />
          </div>
        </div>
      </main>
    </>
  );
}
