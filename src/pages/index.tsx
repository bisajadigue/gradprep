import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";

import { api } from "@/utils/api";
import { Button } from "@/components/elements/Button";
import { SearchInput } from "@/components/elements/Search";
import { Input } from "@/components/elements/Input";

import Lottie from "lottie-react";
import Books from "../../public/assets/lottie/books-1.json";
import Connect from "../../public/assets/lottie/connect.json";
import Info from "../../public/assets/lottie/info.json";
import Quiz from "../../public/assets/lottie/quiz.json";
import { RiArrowLeftCircleFill, RiArrowRightCircleFill } from "react-icons/ri";

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Hero */}
      <main className="relative flex min-h-screen flex-col items-center justify-center overflow-hidden">
        <div className="container flex flex-col items-center justify-center pt-36 ">
          <div className=" absolute -left-32 -top-48 z-0 h-[80vh] w-[80vh] rounded-full bg-[#5056ED]/[.42]"></div>
          <div className=" absolute -left-40 top-64 z-0 h-[50vh] w-[50vh] rounded-full bg-[#111692]/[.42]"></div>
          <div className=" absolute -right-48 bottom-12 z-0 h-[40vh] w-[40vh] rounded-full bg-[#111692]/[.42]"></div>
          <div className=" absolute -bottom-56 -right-24 z-0 h-[64vh] w-[64vh] rounded-full bg-[#946CE8]/[.62]"></div>
          <h1>
            [H1] Persiapkan masa depanmu dalam waktu{" "}
            <span className=" italic text-primary">
              20 menit (use text-primary)
            </span>
            .
          </h1>
          <h2>[h2] This is heading 2.</h2>
          <h3>[h3] This is heading 3.</h3>
          <p>[p] This is normal paragraph text</p>
        </div>
        <div className="flex flex-col items-center gap-2">
          <p>{hello.data ? hello.data.greeting : "Loading tRPC query..."}</p>
          <AuthShowcase />
          <div className="grid grid-cols-2 gap-4">
            <Input />
            <SearchInput placeholder="This is a SearchInput" className="z-10" />
          </div>
        </div>
      </main>

      {/* Section 2 */}
      <div className="relative flex h-[90vh] flex-col items-center justify-center bg-primary text-white">
        <div className="container flex flex-row">
          <Lottie animationData={Books} />
          <div className="flex max-w-[60%] flex-col justify-center">
            <h2>Apakah kamu siap menghadapi tantangan masa depan?</h2>
            <p>
              Untuk mematangkan diri menuju pendidikan pascasarjana, kamu dapat
              melakukan seluruh persiapanmu di GradPrep! Platform kami adalah{" "}
              <i>one-stop solution</i> untuk meraih cita-cita masa depanmu.
            </p>
          </div>
        </div>
      </div>

      {/* Section 3 */}
      <div className="relative flex h-[90vh] flex-col items-center justify-center bg-white">
        <h2 className="container mb-12 text-center">
          Semua kebutuhanmu di satu platform.
        </h2>
        <div className="container flex flex-row justify-center gap-x-12">
          <div className="w-[18vw]">
            <div className="mx-auto w-[50%]">
              <Lottie animationData={Quiz} />
            </div>
            <p>
              Uji kemampuanmu dengan <u>Mock Test</u> !
            </p>
          </div>
          <div className="w-[18vw]">
            <div className="mx-auto w-[50%]">
              <Lottie animationData={Info} />
            </div>
            <p>
              Temukan semua informasi terkait <u>beasiswa dan program S2/S3</u>{" "}
              yang kamu butuhkan.
            </p>
          </div>
          <div className="w-[18vw]">
            <div className="mx-auto w-[50%]">
              <Lottie animationData={Connect} />
            </div>
            <p>
              Butuh bantuan? Tanyakan ke <u>Mentor</u> kami.
            </p>
          </div>
        </div>
      </div>

      {/* Section 4 */}
      <div className="relative flex h-[90vh] flex-col items-center justify-start bg-primary text-white">
        <div className="container relative -top-[10vh] flex h-[20vh] flex-col items-center justify-center rounded-[15px] bg-white p-20 text-black shadow-lg shadow-gray-700">
          <h2>Awooga</h2>
          <div className="flex flex-row justify-around gap-x-2">
            <p>carousel item</p>
            <p>carousel item</p>
            <p>carousel item</p>
            <p>carousel item</p>
            <p>carousel item</p>
          </div>
        </div>
        <h2 className="container text-center">Kata Mereka</h2>
        <div className="container flex flex-row justify-center gap-x-12">
          <button className="transition-all active:scale-[0.85]">
            <RiArrowLeftCircleFill size={48} />
          </button>
          <div className="w-[30vw] text-center">
            <div className="mx-auto w-[50%]">
              <Lottie animationData={Info} />
            </div>
            <p className="font-bold">I really like it, Very Good Platform</p>
            <p>
              Take the edit distance calculated between the previous substrings
              and increment it only if their currently processing chars differ
              (hypothetical necessary substitution).
            </p>
          </div>
          <button className="transition-all active:scale-[0.85]">
            <RiArrowRightCircleFill size={48} />
          </button>
        </div>
      </div>

      <div className="relative flex h-[90vh] flex-col items-center justify-center bg-white">
        <div className="container mb-12 text-center">
          <h2>
            Coba{" "}
            <span className="font-bold italic underline">sekarang juga</span>.
          </h2>
          <p>Gada salahnya kan coba-coba?</p>
        </div>
        <Button variant={"primary"} size={"md"}>
          Daftar Sekarang
        </Button>
      </div>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-row items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <Button
        onClick={sessionData ? () => void signOut() : () => void signIn()}
        variant={"primary"}
        size={"md"}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </Button>
    </div>
  );
}
